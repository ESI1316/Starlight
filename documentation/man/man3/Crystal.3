.TH "Crystal" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Crystal \- Cette classe amplifie les cristaux utilisés dans le jeu\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <crystal\&.hpp>\fP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBCrystal\fP (const \fBPoint\fP &, const double, const int)"
.br
.RI "\fIInstancier un cristal\&. \fP"
.ti -1c
.RI "int \fBgetAmplifier\fP () const "
.br
.RI "\fIRetourne le modifieur de longueur d'onde du cristal\&. \fP"
.ti -1c
.RI "double \fBgetRadius\fP () const "
.br
.RI "\fIRetourne la longueur du rayon du cristal\&. \fP"
.ti -1c
.RI "void \fBreactToRay\fP (\fBRay\fP)"
.br
.RI "\fICette méthode est lancé lorsque le miroir courant est exposé à un rayon\&. \fP"
.ti -1c
.RI "\fBPoint\fP * \fBincludeRay\fP (const \fBRay\fP &) const "
.br
.RI "\fIRenseigne si le crystal est dans la trajectoire du rayon\&. \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBCrystal\fP &) const "
.br
.RI "\fIPermet de savoir si deux cristaux sont les même\&. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBCrystal\fP &) const "
.br
.RI "\fIPermet de savoir si deux cristaux sont différents\&. \fP"
.in -1c
.SS "Attributs privés"

.in +1c
.ti -1c
.RI "int \fBamplifier\fP"
.br
.RI "\fILe modificateur de longueur d'onde agissant sur un rayon passant dans ce cristal\&. \fP"
.in -1c
.SS "Membres hérités additionnels"
.SH "Description détaillée"
.PP 
Cette classe amplifie les cristaux utilisés dans le jeu\&. 

Un cristal est un objet circulaire centré en un point, et d'un certain rayon\&. 
.PP
Un rayon lumineux passant à travers un crystal verra sa longueur d'onde modifiée (en l'augmentant ou en la diminuant d'une certaine valeur) mais pas sa trajectoire\&. 
.PP
Définition à la ligne 23 du fichier crystal\&.hpp\&.
.PP
Est dérivée de \fBElement\fP, et \fBEllipse\fP\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "Crystal::Crystal (const \fBPoint\fP &, const double, const int)"

.PP
Instancier un cristal\&. 
.PD 0

.IP "\(bu" 2
centré au point donné 
.IP "\(bu" 2
avec un rayon donné 
.IP "\(bu" 2
et un amplifier de longueur d'ondes donné 
.PP
,
.PP
ce crystal modifie la longueur d'onde du rayon le traversant en suivant la règle suivante : si la longueur d'onde modifié sort de l'intervalle [longueur d'onde minimale, longueur d'onde maximale] alors elle ne sera pas appliquée\&.
.PP
\fBParamètres:\fP
.RS 4
\fIpoint\fP Le point du centre du cristal\&. 
.br
\fIradius\fP Le rayon du cristal\&. 
.br
\fIamplifieur\fP le modificateur de longueur d'onde du cristal\&. 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "int Crystal::getAmplifier () const\fC [inline]\fP"

.PP
Retourne le modifieur de longueur d'onde du cristal\&. 
.PP
\fBRenvoie:\fP
.RS 4
le modifieur de longueur d'onde du cristal 
.RE
.PP

.PP
Définition à la ligne 110 du fichier crystal\&.hpp\&.
.PP
Références amplifier\&.
.PP
.nf
111 {
112     return this->amplifier;
113 }
.fi
.SS "double Crystal::getRadius () const"

.PP
Retourne la longueur du rayon du cristal\&. 
.PP
\fBRenvoie:\fP
.RS 4
la longueur du rayon du cristal 
.RE
.PP

.SS "\fBPoint\fP* Crystal::includeRay (const \fBRay\fP &) const\fC [virtual]\fP"

.PP
Renseigne si le crystal est dans la trajectoire du rayon\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Un rayon\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Un pointeur vers le point d'intersection (le plus éloigné) avec le rayon s'il existe un pointeur null sinon\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SS "bool Crystal::operator!= (const \fBCrystal\fP &) const"

.PP
Permet de savoir si deux cristaux sont différents\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP si deux cristaux sont différents\&. 
.RE
.PP

.SS "bool Crystal::operator== (const \fBCrystal\fP &) const"

.PP
Permet de savoir si deux cristaux sont les même\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP si deux cristaux sont les même\&. 
.RE
.PP

.SS "void Crystal::reactToRay (\fBRay\fP)\fC [virtual]\fP"

.PP
Cette méthode est lancé lorsque le miroir courant est exposé à un rayon\&. Il va communiquer au niveau le nouveau rayon sortant du cristal\&.
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Un rayon percutant le miroir\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SH "Documentation des données membres"
.PP 
.SS "int Crystal::amplifier\fC [private]\fP"

.PP
Le modificateur de longueur d'onde agissant sur un rayon passant dans ce cristal\&. 
.PP
Définition à la ligne 31 du fichier crystal\&.hpp\&.
.PP
Référencé par getAmplifier()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
