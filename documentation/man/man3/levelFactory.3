.TH "levelFactory" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
levelFactory \- Fonctions utilitaires permettant divers éléments du jeu à partir d'un fichier \&.lvl\&.  

.SH SYNOPSIS
.br
.PP
.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBLevel\fP * \fBgetLevelFromFile\fP (std::string)"
.br
.RI "\fIPermet d'obtenir une référence vers une nouvelle carte initialisée à partir d'un fichier \&.level\&. \fP"
.ti -1c
.RI "\fBSource\fP \fBgetSource\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir une source à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBDest\fP \fBgetDestination\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir une destination à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBCrystal\fP \fBgetCrystal\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir un crystal à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBLens\fP \fBgetLens\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir une lentille à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBWall\fP \fBgetWall\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir un mur à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBNuke\fP \fBgetNuke\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir une bombe à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.ti -1c
.RI "\fBMirror\fP \fBgetMirror\fP (std::ifstream &)"
.br
.RI "\fIPermet d' obtenir un mirroir à partir d'un fichier \&.lvl déjà ouvert\&. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Fonctions utilitaires permettant divers éléments du jeu à partir d'un fichier \&.lvl\&. 
.SH "Documentation des fonctions"
.PP 
.SS "\fBCrystal\fP levelFactory::getCrystal (std::ifstream &)"

.PP
Permet d' obtenir un crystal à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Un cristal\&. 
.RE
.PP

.SS "\fBDest\fP levelFactory::getDestination (std::ifstream &)"

.PP
Permet d' obtenir une destination à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Une destination\&. 
.RE
.PP

.SS "\fBLens\fP levelFactory::getLens (std::ifstream &)"

.PP
Permet d' obtenir une lentille à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Une lentille\&. 
.RE
.PP

.SS "\fBLevel\fP* levelFactory::getLevelFromFile (std::string)"

.PP
Permet d'obtenir une référence vers une nouvelle carte initialisée à partir d'un fichier \&.level\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFilePath\fP chemin vers le fichier \&.level\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
une référence vers une nouvelle carte initialisée\&. 
.RE
.PP

.SS "\fBMirror\fP levelFactory::getMirror (std::ifstream &)"

.PP
Permet d' obtenir un mirroir à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Un mirroir\&. 
.RE
.PP

.SS "\fBNuke\fP levelFactory::getNuke (std::ifstream &)"

.PP
Permet d' obtenir une bombe à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Une bombe\&. 
.RE
.PP

.SS "\fBSource\fP levelFactory::getSource (std::ifstream &)"

.PP
Permet d' obtenir une source à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Une source\&. 
.RE
.PP

.SS "\fBWall\fP levelFactory::getWall (std::ifstream &)"

.PP
Permet d' obtenir un mur à partir d'un fichier \&.lvl déjà ouvert\&. 
.PP
\fBParamètres:\fP
.RS 4
\fImapFile\fP Fichier \&.lvl déjà ouvert\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Un mur\&. 
.RE
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
