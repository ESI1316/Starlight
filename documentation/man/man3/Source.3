.TH "Source" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Source \- Modélise la source lumineuse utilisée dans le jeu\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <source\&.hpp>\fP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSource\fP (const \fBPoint\fP &, const int, const double, const int)"
.br
.RI "\fIInstancie une nouvelle source de position, côté et longueur d'onde donnée\&. \fP"
.ti -1c
.RI "const \fBPoint\fP & \fBgetPosition\fP () const "
.br
.RI "\fIRetourne la coordonnée du coin supérieur gauche du carré modélisant la destination\&. \fP"
.ti -1c
.RI "double \fBgetAngle\fP () const "
.br
.RI "\fIRetourne l'angle du rayon émis\&. \fP"
.ti -1c
.RI "int \fBgetEdge\fP () const "
.br
.RI "\fIRetourne la longueur du côté du carré\&. \fP"
.ti -1c
.RI "int \fBgetWaveLength\fP () const "
.br
.RI "\fIRetourne la longueur d'onde du rayon émis\&. \fP"
.ti -1c
.RI "bool \fBisOn\fP () const "
.br
.RI "\fIPermet de savoir l'état d'émission de la source\&. \fP"
.ti -1c
.RI "void \fBsetOn\fP (const bool)"
.br
.RI "\fIAllume ou éteint la source\&. \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSource\fP &) const "
.br
.RI "\fIPermet de savoir si deux sources sont les mêmes\&. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSource\fP &) const "
.br
.RI "\fIPermet de savoir si deux sources sont différentes\&. \fP"
.ti -1c
.RI "\fBSource\fP & \fBoperator=\fP (const \fBSource\fP &)"
.br
.RI "\fIPermet de copier la source en paramètre dans la source locale\&. \fP"
.ti -1c
.RI "void \fBreactToRay\fP (\fBRay\fP)"
.br
.RI "\fICette méthode est la réaction de la source face à un rayon\&. \fP"
.ti -1c
.RI "\fBPoint\fP * \fBincludeRay\fP (const \fBRay\fP &) const "
.br
.RI "\fICette méthode permet de savoir si la source comprend un point\&. \fP"
.in -1c
.SS "Attributs privés"

.in +1c
.ti -1c
.RI "bool \fBon\fP"
.br
.RI "\fIÉtat d'émission de la source\&. \fP"
.ti -1c
.RI "double \fBalpha\fP"
.br
.RI "\fIL'angle, en radian, d'émission de la source lumineuse\&. \fP"
.ti -1c
.RI "int \fBwaveLength\fP"
.br
.RI "\fILa longueur d'onde du rayon tiré par la source\&. \fP"
.in -1c
.SS "Membres hérités additionnels"
.SH "Description détaillée"
.PP 
Modélise la source lumineuse utilisée dans le jeu\&. 

La source est un objet carré qui, si allumée, émet un rayon lumineux de longueur d'onde donnée dont l'angle ne peut pas être changé\&. Le rayon lumineux est émis depuis la position, i\&.e\&., le coin supérieur gauche, de la source\&. 
.PP
Définition à la ligne 19 du fichier source\&.hpp\&.
.PP
Est dérivée de \fBElement\fP, et \fBRectangle\fP\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "Source::Source (const \fBPoint\fP &, const int, const double, const int)"

.PP
Instancie une nouvelle source de position, côté et longueur d'onde donnée\&. La position dénote la coordonnée du coin supérieur gauche du carré modélisant la source\&. La source est initialement éteinte\&. Si la longueur d'onde du rayon lumineux émis n'est pas comprise entre 360 nm et 830 nm, elle est réglée sur 600 nm\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIposition\fP La position du coin supérieur gauche de la source\&. 
.br
\fIedge\fP La longueur du côté du carré modélisant la source\&. 
.br
\fIwaveLength\fP La longueur d'onde du rayon lumineux émis\&.
.RE
.PP
\fBVoir également:\fP
.RS 4
\fBRay::WL_MIN\fP 
.PP
\fBRay::WL_MAX\fP 
.PP
\fBRay::WL_DFT\fP 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "double Source::getAngle () const\fC [inline]\fP"

.PP
Retourne l'angle du rayon émis\&. 
.PP
\fBRenvoie:\fP
.RS 4
l'angle du rayon émis\&. 
.RE
.PP

.PP
Définition à la ligne 146 du fichier source\&.hpp\&.
.PP
Références alpha\&.
.PP
.nf
147 {
148     return this->alpha;
149 }
.fi
.SS "int Source::getEdge () const\fC [inline]\fP"

.PP
Retourne la longueur du côté du carré\&. 
.PP
\fBRenvoie:\fP
.RS 4
la longueur du côté du carré\&. 
.RE
.PP

.PP
Définition à la ligne 151 du fichier source\&.hpp\&.
.PP
Références Rectangle::width\&.
.PP
.nf
152 {
153     return this->width;
154 }
.fi
.SS "const \fBPoint\fP & Source::getPosition () const\fC [inline]\fP"

.PP
Retourne la coordonnée du coin supérieur gauche du carré modélisant la destination\&. 
.PP
\fBRenvoie:\fP
.RS 4
La coordonnée du coin supérieur gauche du carré modélisant la source\&. 
.RE
.PP

.PP
Définition à la ligne 141 du fichier source\&.hpp\&.
.PP
Références Rectangle::upLeftCorner\&.
.PP
.nf
142 {
143     return this->upLeftCorner;
144 }
.fi
.SS "int Source::getWaveLength () const\fC [inline]\fP"

.PP
Retourne la longueur d'onde du rayon émis\&. 
.PP
\fBRenvoie:\fP
.RS 4
la longueur d'onde du rayon émis\&. 
.RE
.PP

.PP
Définition à la ligne 156 du fichier source\&.hpp\&.
.PP
Références waveLength\&.
.PP
.nf
157 {
158     return this->waveLength;
159 }
.fi
.SS "\fBPoint\fP* Source::includeRay (const \fBRay\fP &) const\fC [virtual]\fP"

.PP
Cette méthode permet de savoir si la source comprend un point\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCnullptr\fP dans tout les cas, la source est un objet qui ne réagit pas\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SS "bool Source::isOn () const\fC [inline]\fP"

.PP
Permet de savoir l'état d'émission de la source\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si la source émet un rayon lumineux\&. 
.RE
.PP

.PP
Définition à la ligne 161 du fichier source\&.hpp\&.
.PP
Références on\&.
.PP
.nf
162 {
163     return this->on;
164 }
.fi
.SS "bool Source::operator!= (const \fBSource\fP &) const"

.PP
Permet de savoir si deux sources sont différentes\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si deux sources sont différentes\&. 
.RE
.PP

.SS "\fBSource\fP& Source::operator= (const \fBSource\fP &)"

.PP
Permet de copier la source en paramètre dans la source locale\&. 
.PP
\fBRenvoie:\fP
.RS 4
La source locale modifiée\&. 
.RE
.PP

.SS "bool Source::operator== (const \fBSource\fP &) const"

.PP
Permet de savoir si deux sources sont les mêmes\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si deux sources sont les mêmes\&. 
.RE
.PP

.SS "void Source::reactToRay (\fBRay\fP)\fC [virtual]\fP"

.PP
Cette méthode est la réaction de la source face à un rayon\&. Celui- ci ne fait rien\&. 
.PP
Implémente \fBElement\fP\&.
.SS "void Source::setOn (const bool)"

.PP
Allume ou éteint la source\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIon\fP Le nouvel état de la source\&. 
.RE
.PP

.SH "Documentation des données membres"
.PP 
.SS "double Source::alpha\fC [private]\fP"

.PP
L'angle, en radian, d'émission de la source lumineuse\&. 
.PP
Définition à la ligne 29 du fichier source\&.hpp\&.
.PP
Référencé par getAngle()\&.
.SS "bool Source::on\fC [private]\fP"

.PP
État d'émission de la source\&. 
.PP
Définition à la ligne 24 du fichier source\&.hpp\&.
.PP
Référencé par isOn()\&.
.SS "int Source::waveLength\fC [private]\fP"

.PP
La longueur d'onde du rayon tiré par la source\&. 
.PP
Définition à la ligne 34 du fichier source\&.hpp\&.
.PP
Référencé par getWaveLength()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
