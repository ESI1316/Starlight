.TH "Rectangle" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Rectangle \- Le rectangle est objet géométrique, du plan, à quatre coté parallèles deux à deux\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rectangle\&.hpp>\fP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBRectangle\fP (double, double, const \fBPoint\fP &)"
.br
.RI "\fIPermet de construire un nouveau rectangle initialisé\&. \fP"
.ti -1c
.RI "std::vector< \fBPoint\fP > \fBgetIntersectionPoints\fP (const \fBLine\fP &) const "
.br
.RI "\fIPermet d'obtenir les points d'intersection entre le rectangle et la droite entrée en paramètre\&. \fP"
.ti -1c
.RI "bool \fBisOnBorder\fP (const \fBPoint\fP &) const "
.br
.RI "\fIRenseigne si un point se trouve sur la bordure du rectangle\&. \fP"
.ti -1c
.RI "std::vector< \fBLine\fP > \fBgetEdges\fP () const "
.br
.RI "\fIPermet d'obtenir les côtés du rectangle sous forme de droites\&. \fP"
.ti -1c
.RI "virtual double \fBgetWidth\fP () const "
.br
.RI "\fIPermet d'obtenir la longueur du rectangle\&. \fP"
.ti -1c
.RI "virtual double \fBgetHeight\fP () const "
.br
.RI "\fIPermet d'obtenir la hauteur du rectangle\&. \fP"
.ti -1c
.RI "\fBPoint\fP \fBgetUpLeftCorner\fP () const "
.br
.RI "\fIPermet d'obtenir les coordonnées du coté supérieur du rectangle\&. \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBRectangle\fP &) const "
.br
.RI "\fIPermet de savoir si deux rectangles sont identiques\&. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBRectangle\fP &) const "
.br
.RI "\fIPermet de savoir si deux rectangles sont différents\&. \fP"
.ti -1c
.RI "\fBRectangle\fP & \fBoperator=\fP (const \fBRectangle\fP &)"
.br
.RI "\fIPermet de copier un rectangle dans un autre\&. \fP"
.in -1c
.SS "Attributs protégés"

.in +1c
.ti -1c
.RI "double \fBwidth\fP"
.br
.RI "\fILa largeur du rectangle\&. \fP"
.ti -1c
.RI "double \fBheight\fP"
.br
.RI "\fILa longueur du rectangle\&. \fP"
.ti -1c
.RI "\fBPoint\fP \fBupLeftCorner\fP"
.br
.RI "\fILa position du coin supérieur gauche du rectangle\&. \fP"
.ti -1c
.RI "std::vector< \fBLine\fP > \fBedges\fP"
.br
.RI "\fILes équations des 4 droites composant le rectangle\&. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Le rectangle est objet géométrique, du plan, à quatre coté parallèles deux à deux\&. 
.PP
Définition à la ligne 14 du fichier rectangle\&.hpp\&.
.PP
Dérivée par \fBDest\fP, et \fBSource\fP\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "Rectangle::Rectangle (double, double, const \fBPoint\fP &)"

.PP
Permet de construire un nouveau rectangle initialisé\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIwidth\fP Largeur du rectangle\&. 
.br
\fIheight\fP Hauteur du rectangle\&. 
.br
\fIupLeftCorner\fP Côté supérieur gauche du rectangle\&. 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "std::vector< \fBLine\fP > Rectangle::getEdges () const\fC [inline]\fP"

.PP
Permet d'obtenir les côtés du rectangle sous forme de droites\&. 
.PP
\fBRenvoie:\fP
.RS 4
Les côtés du rectangle sous forme de droites\&. 
.RE
.PP

.PP
Définition à la ligne 132 du fichier rectangle\&.hpp\&.
.PP
Références edges\&.
.PP
.nf
133 {
134     return this->edges;
135 }
.fi
.SS "double Rectangle::getHeight () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Permet d'obtenir la hauteur du rectangle\&. 
.PP
\fBRenvoie:\fP
.RS 4
La hauteur du rectangle\&. 
.RE
.PP

.PP
Définition à la ligne 142 du fichier rectangle\&.hpp\&.
.PP
Références height\&.
.PP
.nf
143 {
144     return this->height;
145 }
.fi
.SS "std::vector<\fBPoint\fP> Rectangle::getIntersectionPoints (const \fBLine\fP &) const"

.PP
Permet d'obtenir les points d'intersection entre le rectangle et la droite entrée en paramètre\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIline\fP Droite dont on désire obtenir le point d'intersection avec la droite courante\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
Un vecteur contenant les points d'intersection entre la droite entrée en paramètre et le rectangle\&. 
.RE
.PP

.SS "\fBPoint\fP Rectangle::getUpLeftCorner () const\fC [inline]\fP"

.PP
Permet d'obtenir les coordonnées du coté supérieur du rectangle\&. 
.PP
\fBRenvoie:\fP
.RS 4
Les coordonnées du coté supérieur du rectangle\&. 
.RE
.PP

.PP
Définition à la ligne 147 du fichier rectangle\&.hpp\&.
.PP
Références upLeftCorner\&.
.PP
.nf
148 {
149     return this->upLeftCorner;
150 }
.fi
.SS "double Rectangle::getWidth () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Permet d'obtenir la longueur du rectangle\&. 
.PP
\fBRenvoie:\fP
.RS 4
La longueur du rectangle\&. 
.RE
.PP

.PP
Définition à la ligne 137 du fichier rectangle\&.hpp\&.
.PP
Références width\&.
.PP
.nf
138 {
139     return this->width;
140 }
.fi
.SS "bool Rectangle::isOnBorder (const \fBPoint\fP &) const"

.PP
Renseigne si un point se trouve sur la bordure du rectangle\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIpoint\fP \fBPoint\fP dont on désire savoir s'il est inclus sur la bordure du rectangle\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si le \fBPoint\fP entré en paramètre est inclus sur la bordure du rectangle\&. 
.RE
.PP

.SS "bool Rectangle::operator!= (const \fBRectangle\fP &) const"

.PP
Permet de savoir si deux rectangles sont différents\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les deux rectangles sont différents\&. 
.RE
.PP

.SS "\fBRectangle\fP& Rectangle::operator= (const \fBRectangle\fP &)"

.PP
Permet de copier un rectangle dans un autre\&. 
.PP
\fBRenvoie:\fP
.RS 4
Le rectangle courant modifié\&. 
.RE
.PP

.SS "bool Rectangle::operator== (const \fBRectangle\fP &) const"

.PP
Permet de savoir si deux rectangles sont identiques\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les deux rectangles sont identiques\&. 
.RE
.PP

.SH "Documentation des données membres"
.PP 
.SS "std::vector<\fBLine\fP> Rectangle::edges\fC [protected]\fP"

.PP
Les équations des 4 droites composant le rectangle\&. 
.PP
Définition à la ligne 37 du fichier rectangle\&.hpp\&.
.PP
Référencé par getEdges()\&.
.SS "double Rectangle::height\fC [protected]\fP"

.PP
La longueur du rectangle\&. 
.PP
Définition à la ligne 27 du fichier rectangle\&.hpp\&.
.PP
Référencé par Dest::getEdge(), et getHeight()\&.
.SS "\fBPoint\fP Rectangle::upLeftCorner\fC [protected]\fP"

.PP
La position du coin supérieur gauche du rectangle\&. 
.PP
Définition à la ligne 32 du fichier rectangle\&.hpp\&.
.PP
Référencé par Dest::getPosition(), Source::getPosition(), et getUpLeftCorner()\&.
.SS "double Rectangle::width\fC [protected]\fP"

.PP
La largeur du rectangle\&. 
.PP
Définition à la ligne 22 du fichier rectangle\&.hpp\&.
.PP
Référencé par Source::getEdge(), et getWidth()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
