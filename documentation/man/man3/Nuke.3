.TH "Nuke" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nuke \- Cette classe modélise les bombes utilisées dans le jeu\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <nuke\&.hpp>\fP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBNuke\fP (const \fBPoint\fP &, const double)"
.br
.RI "\fIInstancie une bombe en une position donnée avec un rayon déterminé\&. \fP"
.ti -1c
.RI "const \fBPoint\fP & \fBgetLocation\fP () const "
.br
.RI "\fIRetourne la position de la bombe\&. \fP"
.ti -1c
.RI "double \fBgetRadius\fP () const "
.br
.RI "\fIRetourne le rayon de la bombe\&. \fP"
.ti -1c
.RI "bool \fBisLightedUp\fP () const "
.br
.RI "\fICette méthode permet de savoir si la bombe est illuminée\&. \fP"
.ti -1c
.RI "void \fBsetLightedUp\fP (const bool)"
.br
.RI "\fICette méthode permet d'établir un nouvel état d'illumination de la bombe\&. \fP"
.ti -1c
.RI "void \fBreactToRay\fP (\fBRay\fP)"
.br
.RI "\fIRéaction à l'exposition d'un rayon\&. \fP"
.ti -1c
.RI "\fBPoint\fP * \fBincludeRay\fP (const \fBRay\fP &) const "
.br
.RI "\fIRenseigne si la bombe est dans la trajectoire du rayon\&. \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBNuke\fP &) const "
.br
.RI "\fIPermet de savoir si deux bombes sont les mêmes\&. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBNuke\fP &) const "
.br
.RI "\fIPermet de savoir si deux bombes sont différentes\&. \fP"
.in -1c
.SS "Attributs privés"

.in +1c
.ti -1c
.RI "bool \fBlight\fP"
.br
.RI "\fIL'état d'illumination d'une bombe\&. \fP"
.in -1c
.SS "Membres hérités additionnels"
.SH "Description détaillée"
.PP 
Cette classe modélise les bombes utilisées dans le jeu\&. 

Une bombe est un objet circulaire qui, si illuminé par un rayon, fait perdre la partie au joueur\&. 
.PP
Définition à la ligne 17 du fichier nuke\&.hpp\&.
.PP
Est dérivée de \fBElement\fP, et \fBEllipse\fP\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "Nuke::Nuke (const \fBPoint\fP &, const double)"

.PP
Instancie une bombe en une position donnée avec un rayon déterminé\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIposition\fP La position du centre de la bombe\&. 
.br
\fIradius\fP Le rayon de la bombe\&. 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "const \fBPoint\fP & Nuke::getLocation () const\fC [inline]\fP"

.PP
Retourne la position de la bombe\&. 
.PP
\fBRenvoie:\fP
.RS 4
la position de la bombe\&. 
.RE
.PP

.PP
Définition à la ligne 107 du fichier nuke\&.hpp\&.
.PP
Références Ellipse::center\&.
.PP
.nf
108 {
109     return this->center;
110 }
.fi
.SS "double Nuke::getRadius () const\fC [inline]\fP"

.PP
Retourne le rayon de la bombe\&. 
.PP
\fBRenvoie:\fP
.RS 4
le rayon de la bombe\&. 
.RE
.PP

.PP
Définition à la ligne 112 du fichier nuke\&.hpp\&.
.PP
Références Ellipse::getHeight()\&.
.PP
.nf
113 {
114     return (this->getHeight() / 2\&.);
115 }
.fi
.SS "\fBPoint\fP* Nuke::includeRay (const \fBRay\fP &) const\fC [virtual]\fP"

.PP
Renseigne si la bombe est dans la trajectoire du rayon\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Le rayon\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si la bombe se trouve dans la trajectoire du rayon entré en paramètre\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SS "bool Nuke::isLightedUp () const\fC [inline]\fP"

.PP
Cette méthode permet de savoir si la bombe est illuminée\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si la bombe est illuminée, faux sinon\&. 
.RE
.PP

.PP
Définition à la ligne 102 du fichier nuke\&.hpp\&.
.PP
Références light\&.
.PP
.nf
103 {
104     return this->light;
105 }
.fi
.SS "bool Nuke::operator!= (const \fBNuke\fP &) const"

.PP
Permet de savoir si deux bombes sont différentes\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les deux bombes sont différentes\&. 
.RE
.PP

.SS "bool Nuke::operator== (const \fBNuke\fP &) const"

.PP
Permet de savoir si deux bombes sont les mêmes\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les deux bombes sont les mêmes\&. 
.RE
.PP

.SS "void Nuke::reactToRay (\fBRay\fP)\fC [virtual]\fP"

.PP
Réaction à l'exposition d'un rayon\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Le rayon\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SS "void Nuke::setLightedUp (const bool)"

.PP
Cette méthode permet d'établir un nouvel état d'illumination de la bombe\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIlight\fP Le nouvel état d'illumination de la bombe\&. 
.RE
.PP

.SH "Documentation des données membres"
.PP 
.SS "bool Nuke::light\fC [private]\fP"

.PP
L'état d'illumination d'une bombe\&. 
.PP
Définition à la ligne 22 du fichier nuke\&.hpp\&.
.PP
Référencé par isLightedUp()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
