.TH "Wall" 3 "Vendredi 24 Avril 2015" "Starlight" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Wall \- Cette classe modélise les murs utilisés dans le jeu\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <wall\&.hpp>\fP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBWall\fP (const \fBPoint\fP &, const \fBPoint\fP &)"
.br
.RI "\fIInstancie un mur\&. \fP"
.ti -1c
.RI "const \fBPoint\fP & \fBgetStart\fP () const "
.br
.RI "\fIRetourne le début du mur\&. \fP"
.ti -1c
.RI "const \fBPoint\fP & \fBgetEnd\fP () const "
.br
.RI "\fIRetourne la fin du mur\&. \fP"
.ti -1c
.RI "void \fBreactToRay\fP (\fBRay\fP)"
.br
.RI "\fIRéaction à l'exposition d'un rayon\&. \fP"
.ti -1c
.RI "\fBPoint\fP * \fBincludeRay\fP (const \fBRay\fP &) const "
.br
.RI "\fIRenseigne si le mur est dans la trajectoire du rayon\&. \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBWall\fP &) const "
.br
.RI "\fIPermet de savoir si deux murs sont identiques\&. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBWall\fP &) const "
.br
.RI "\fIPermet de savoir si deux murs sont différents\&. \fP"
.in -1c
.SS "Attributs privés"

.in +1c
.ti -1c
.RI "\fBPoint\fP \fBstart\fP"
.br
.RI "\fILe point de départ du segment de droite représentant le mur\&. \fP"
.ti -1c
.RI "\fBPoint\fP \fBend\fP"
.br
.RI "\fILe point d'arrivé du segment de droite représentant le mur\&. \fP"
.in -1c
.SS "Membres hérités additionnels"
.SH "Description détaillée"
.PP 
Cette classe modélise les murs utilisés dans le jeu\&. 

Les murs sont des segments de droite qui ne réfléchissent pas la lumière\&. 
.PP
Définition à la ligne 16 du fichier wall\&.hpp\&.
.PP
Est dérivée de \fBElement\fP, et \fBLine\fP\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "Wall::Wall (const \fBPoint\fP &, const \fBPoint\fP &)"

.PP
Instancie un mur\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIstart\fP Le début du mur\&. 
.br
\fIend\fP La fin du mur\&. 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "const \fBPoint\fP & Wall::getEnd () const\fC [inline]\fP"

.PP
Retourne la fin du mur\&. 
.PP
\fBRenvoie:\fP
.RS 4
La fin du mur\&. 
.RE
.PP

.PP
Définition à la ligne 97 du fichier wall\&.hpp\&.
.PP
Références end\&.
.PP
.nf
98 {
99     return this->end;
100 }
.fi
.SS "const \fBPoint\fP & Wall::getStart () const\fC [inline]\fP"

.PP
Retourne le début du mur\&. 
.PP
\fBRenvoie:\fP
.RS 4
Le début du mur\&. 
.RE
.PP

.PP
Définition à la ligne 92 du fichier wall\&.hpp\&.
.PP
Références start\&.
.PP
.nf
93 {
94     return this->start;
95 }
.fi
.SS "\fBPoint\fP* Wall::includeRay (const \fBRay\fP &) const\fC [virtual]\fP"

.PP
Renseigne si le mur est dans la trajectoire du rayon\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Le rayon\&.
.RE
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si la mur se trouve dans la trajectoire du rayon entré en paramètre\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SS "bool Wall::operator!= (const \fBWall\fP &) const"

.PP
Permet de savoir si deux murs sont différents\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les murs sont différents\&. 
.RE
.PP

.SS "bool Wall::operator== (const \fBWall\fP &) const"

.PP
Permet de savoir si deux murs sont identiques\&. 
.PP
\fBRenvoie:\fP
.RS 4
\fCtrue\fP Si les murs sont les même\&. 
.RE
.PP

.SS "void Wall::reactToRay (\fBRay\fP)\fC [virtual]\fP"

.PP
Réaction à l'exposition d'un rayon\&. 
.PP
\fBParamètres:\fP
.RS 4
\fIray\fP Le rayon\&. 
.RE
.PP

.PP
Implémente \fBElement\fP\&.
.SH "Documentation des données membres"
.PP 
.SS "\fBPoint\fP Wall::end\fC [private]\fP"

.PP
Le point d'arrivé du segment de droite représentant le mur\&. 
.PP
Définition à la ligne 26 du fichier wall\&.hpp\&.
.PP
Référencé par getEnd()\&.
.SS "\fBPoint\fP Wall::start\fC [private]\fP"

.PP
Le point de départ du segment de droite représentant le mur\&. 
.PP
Définition à la ligne 21 du fichier wall\&.hpp\&.
.PP
Référencé par getStart()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Starlight à partir du code source\&.
